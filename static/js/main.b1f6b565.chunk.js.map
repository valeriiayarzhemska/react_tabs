{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","find","id","className","map","tab","title","isTabActive","classNames","href","onClick","handleClickTab","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"8LAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAaH,EAAKI,MAAK,qBAAGC,KAAgBJ,MAAkBD,EAAK,GAQvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAC,GACR,IACEH,EAEEG,EAFFH,GACAI,EACED,EADFC,MAEIC,EAAcL,IAAOF,EAAWE,GAEtC,OACE,oBACEC,UAAWK,IAAW,CACpB,YAAaD,IAEf,UAAQ,MAJV,SAOE,mBACEE,KAAI,WAAMP,GACV,UAAQ,UACRQ,QAAS,kBA5BF,SAACH,EAAsBF,GACvCE,GACHR,EAAcM,GA0BaM,CAAeJ,EAAaF,IAH7C,SAKGC,KAPEJ,UAef,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAWY,cChDPf,G,kBAAO,CAClB,CAAEK,GAAI,QAASI,MAAO,QAASM,QAAS,eACxC,CAAEV,GAAI,QAASI,MAAO,QAASM,QAAS,eACxC,CAAEV,GAAI,QAASI,MAAO,QAASM,QAAS,iBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASjB,EAAK,GAAGK,IAA3D,mBAAOJ,EAAP,KAAsBiB,EAAtB,KAYA,OACE,sBAAKZ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,oCAPkBN,EAAKI,MAAK,qBAAGC,KAAgBJ,MAAkBD,EAAK,IAErDS,SASjB,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeA,EACfC,cAnBgB,SAACM,GACrBU,EAAiBV,EAAIH,WCfzBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b1f6b565.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentTab = tabs.find(({ id }) => id === selectedTabId) || tabs[0];\n\n  const handleClickTab = (isTabActive: boolean, tab: Tab) => {\n    if (!isTabActive) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const {\n              id,\n              title,\n            } = tab;\n            const isTabActive = id === currentTab.id;\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': isTabActive,\n                })}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleClickTab(isTabActive, tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleOnClick = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const getTabTitle = () => {\n    const selectedTab = tabs.find(({ id }) => id === selectedTabId) || tabs[0];\n\n    return selectedTab.title;\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getTabTitle()}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleOnClick}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}